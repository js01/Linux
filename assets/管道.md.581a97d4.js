import{_ as s,o as a,c as e,O as o}from"./chunks/framework.dcea505e.js";const y=JSON.parse('{"title":"管道","description":"","frontmatter":{},"headers":[],"relativePath":"管道.md","filePath":"管道.md"}'),t={name:"管道.md"},n=o('<h1 id="管道" tabindex="-1">管道 <a class="header-anchor" href="#管道" aria-label="Permalink to &quot;管道&quot;">​</a></h1><p>管道可以说是命令行的灵魂，如同管道的名字一样，管道使得命令行的操作如行云流水一般。</p><p>一个实用的例子是求出本目录下文件的数量：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">ls</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-l</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">nl</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">tail</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-1</span></span></code></pre></div><p>这里暂且先不考虑链接文件的情况， 本例子先使用<code>ls -l</code>将每个文件一行的形式输出，然后使用<code>nl</code>为每一行打上行号，然后使用<code>tail</code>倒序查看最后一行，这样便得出了本目录下文件的数量。</p>',5),l=[n];function p(c,r,_,d,i,C){return a(),e("div",null,l)}const A=s(t,[["render",p]]);export{y as __pageData,A as default};
